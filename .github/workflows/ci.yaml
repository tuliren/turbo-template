name: CI

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - 'apps/**'
      - 'packages/database/**'
      - '.github/workflows/ci.yaml'
      - 'package-lock.json'
    branches:
      - main
  types:
    - opened
    - reopened
    - synchronize
    - ready_for_review
    - review_requested
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  TURBO_TELEMETRY_DISABLED: 1
  NEXT_TELEMETRY_DISABLED: 1
  HUSKY: 0
  CI: 1

jobs:
  ci:
    if: ${{ !github.event.pull_request.draft || github.event.pull_request.requested_reviewers[0] || github.event.pull_request.requested_teams[0] }}
    runs-on: ubuntu-latest
    env:
      TURBO_TELEMETRY_DISABLED: 1
      NEXT_TELEMETRY_DISABLED: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Enable corepack
        run: corepack enable
      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'poetry'
      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
          cd apps/backend && yarn dev:init
      - name: Lint code
        run: |
          yarn lint
          yarn format:check
      - name: Run tests
        run: |
          yarn test

  storybook:
    if: ${{ !github.event.pull_request.draft || github.event.pull_request.requested_reviewers[0] || github.event.pull_request.requested_teams[0] }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/web
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Enable Corepack
        run: corepack enable
        working-directory: .
      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - name: Install dependencies
        run: npm ci
      - name: Cache playwright
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-
      - name: Install playwright
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
      - name: Set up main database
        working-directory: packages/database
        run: yarn db:generate
      - name: Build storybook
        working-directory: apps/web
        env:
          DATABASE_URL: ${{ secrets.PREVIEW_MAIN_DATABASE_URL }}
        run: yarn build-storybook
      - name: Serve storybook and run tests
        working-directory: apps/web
        env:
          DATABASE_URL: ${{ secrets.PREVIEW_MAIN_DATABASE_URL }}
        run: |
          npx concurrently -k -s first -n "SB,TEST" -c "green,blue" \
            "npx http-server storybook-static -p 6006" \
            "npx wait-on tcp:127.0.0.1:6006 && yarn test:storybook"
      - name: Run chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: apps/web
          onlyChanged: true
          storybookBuildDir: storybook-static
          exitOnceUploaded: true
